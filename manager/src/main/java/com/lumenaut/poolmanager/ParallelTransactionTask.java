package com.lumenaut.poolmanager;

import com.lumenaut.poolmanager.DataFormats.TransactionResult;
import org.stellar.sdk.KeyPair;

import java.util.concurrent.atomic.AtomicLong;

/**
 * @Author Luca Vignaroli
 * @Email luca@burning.it
 * @Date 20/07/2018 - 3:26 PM
 */
public class ParallelTransactionTask implements Runnable {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //region FIELDS

    //
    final TransactionResult finalResults;
    final AtomicLong paidTotal;
    final AtomicLong totalFees;
    final AtomicLong totalPayment;
    final AtomicLong remainingPayment;

    // Signing
    final KeyPair source;
    final KeyPair signer;
    final int channelIndex;
    final String channelAccount;
    final String channelKey;

    //endregion
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //region ACCESSORS

    //endregion
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //region CONSTRUCTORS

    /**
     * Constructor
     */
    public ParallelTransactionTask(final TransactionResult finalResults, final AtomicLong paidTotal, final AtomicLong totalFees, final AtomicLong totalPayment, final AtomicLong remainingPayment,
                                   final KeyPair source, final KeyPair signer, final int channelIndex, final String channelAccount, final String channelKey) {
        this.finalResults = finalResults;
        this.paidTotal = paidTotal;
        this.totalFees = totalFees;
        this.totalPayment = totalPayment;
        this.remainingPayment = remainingPayment;

        this.source = source;
        this.signer = signer;
        this.channelIndex = channelIndex;
        this.channelAccount = channelAccount;
        this.channelKey = channelKey;
    }

    //endregion
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //region INTERFACES IMPLEMENTATIONS

    @Override
    public void run() {
        // Execute
    }

    //endregion
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //region METHOD OVERRIDES

    //endregion
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //region METHODS

    //endregion
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}

